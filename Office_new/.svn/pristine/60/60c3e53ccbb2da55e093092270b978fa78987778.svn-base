//
//  WorkDeskViewController.swift
//  Office
//
//  Created by roger on 2017/3/29.
//  Copyright © 2017年 roger. All rights reserved.
//

import UIKit
import CoreFramework
import ImageSlideshow
import SDWebImage
import HandyJSON
import SwiftyJSON

class WorkDeskViewController: BaseViewController{
    
    // MARK: - Property
    //public
    fileprivate let scrollView = UIScrollView()
    fileprivate let flashView = UIView()
    fileprivate var collectionView :UICollectionView!
    //private
    fileprivate let Identifier = "cell"
    fileprivate var selectedArr = [AppInfoModel]()
    var slideshow =  ImageSlideshow()
    let titleLabel = UILabel()
    var imagesModel: WorkDeskImageModel?
    var sdWebImageSource = [SDWebImageSource]()
    var appsModel = [WorkDeskModel]()
    
    var data = Data()
    
    // MARK: - Override
    init() {
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    override func viewDidLoad() {
        
        super.viewDidLoad()
        getImageData()
        getData()
        creatData()
        creatUI()
        
        
        let url = URL(string: "https://api.netease.im/nimserver/msg/sendBatchMsg.action")
        let param = ["fromAccid":"rogertan30","toAccids":["rogertan300","24406060735"],"type":0] as [String : Any]
        
        let now = Date()
        let timeInterval:TimeInterval = now.timeIntervalSince1970
        let timeStamp = String(timeInterval)
        let appKey = NTESDemoConfig.shared().appKey
        let appSecret = "90u757h67n87";
        let nonce = "12345"
        let str = String(appSecret + nonce + timeStamp)
        
        
        //        Network.manager.requestSerializer.setValue("application/x-www-form-urlencoded;charset=utf-8", forHTTPHeaderField: "Content-Type")
        //        Network.manager.requestSerializer.setValue(appKey, forHTTPHeaderField: "AppKey")
        //        Network.manager.requestSerializer.setValue(nonce, forHTTPHeaderField: "Nonce")
        //        Network.manager.requestSerializer.setValue(Date.now.description, forHTTPHeaderField: "CurTime")
        //        Network.manager.requestSerializer.setValue(str?.SHA1(), forHTTPHeaderField: "CheckSum")
        //
        //        Network.manager.post("https://api.netease.im/nimserver/msg/sendBatchMsg.action", parameters: param, progress: nil, success: { (task, code) in
        //            print(code)
        //        }) { (task, error) in
        //            print(error)
        //        }
        
    }
}

// MARK: - Private
extension WorkDeskViewController{
    fileprivate func creatUI() {
        title = "工作台"
        let item = UIBarButtonItem(image: UIImage(named: "mo_ren_tou_xiang"), style: UIBarButtonItemStyle.plain, target: self, action: #selector(btnClicked))
        self.navigationItem.leftBarButtonItem = item
        
        let rightButton = UIBarButtonItem(title: "应用编辑", style: UIBarButtonItemStyle.plain, target: self, action: #selector(editApps))
        navigationItem.rightBarButtonItem = rightButton
        
        view.addSubview(scrollView)
        scrollView.backgroundColor = UIColor.clear
        scrollView.snp.makeConstraints { (make) in
            make.top.left.bottom.right.equalTo(view)
        }
        
        view.addSubview(flashView)
        flashView.backgroundColor = UIColor.red
        flashView.snp.makeConstraints { (make) in
            make.top.left.right.equalTo(view)
            make.height.equalTo(214)
        }
        
        flashView.addSubview(slideshow)
        slideshow.snp.makeConstraints { (make) in
            make.top.left.right.bottom.equalTo(flashView)
        }
        slideshow.backgroundColor = UIColor.white
        slideshow.slideshowInterval = 2.0
        slideshow.pageControlPosition = PageControlPosition.insideScrollView
        slideshow.pageControl.currentPageIndicatorTintColor = UIColor.B1
        slideshow.pageControl.pageIndicatorTintColor = .white
        slideshow.contentScaleMode = UIViewContentMode.scaleAspectFill
        slideshow.addSubview(titleLabel)
        titleLabel.textColor = UIColor.T6
        titleLabel.font = UIFont.H5
        titleLabel.snp.makeConstraints { (make) in
            make.left.equalTo(slideshow)
            make.height.equalTo(slideshow.pageControl)
            make.right.equalTo(slideshow.pageControl.snp.left)
            make.bottom.equalTo(slideshow)
        }
        slideshow.currentPageChanged = { page in
            self.titleLabel.text = "   " + (self.imagesModel?.titles[self.slideshow.currentPage])!
            
        }
        //        slideshow.setImageInputs(sdWebImageSource)
        let recognizer = UITapGestureRecognizer(target: self, action: #selector(didTap(gesture:)))
        slideshow.addGestureRecognizer(recognizer)
        
        let layout = UICollectionViewFlowLayout()
        let interval: CGFloat = 0.5
        let width = screenWidth/3
        layout.scrollDirection = .vertical
        layout.itemSize = CGSize(width: width - interval, height: width - interval)
        layout.minimumInteritemSpacing = interval //纵间距
        layout.minimumLineSpacing = interval //行间距
        layout.sectionInset = UIEdgeInsets(top: 0, left: 0, bottom: 1, right: 0)
        
        collectionView = UICollectionView(frame: screenRect, collectionViewLayout: layout)
        view.addSubview(collectionView)
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.backgroundColor = UIColor.clear
        collectionView?.register(WorkDeskCell.self, forCellWithReuseIdentifier: Identifier)
        collectionView.snp.makeConstraints { (make) in
            make.left.right.bottom.equalTo(view)
            make.top.equalTo(flashView.snp.bottom)
        }
    }
    
    fileprivate func creatData() {
        let data = AppInfoModel()
        data.name = "视频会议"
        data.url = "test://"
        data.imageName = "shi_pin_hui_yi"
        let data2 = AppInfoModel()
        data2.name = "即时通信"
        data2.url = "test://"
        data2.imageName = "ji_shi_tong_xun"
        let data3 = AppInfoModel()
        data3.name = "群发助手"
        data3.url = "test://"
        data3.imageName = "qun_fa_zhu_shou"

        selectedArr.append(data)
        selectedArr.append(data2)
        selectedArr.append(data3)
        
    }
    
    
}

extension WorkDeskViewController {
    
    /// 编辑应用
    func editApps() {
        let channelVC = MoreViewController(a: selectedArr)
//        channelVC.switchoverCallback = {
        
//            (selectedArr) -> () in
//            
//            self.selectedArr = selectedArr
//            let data = AppInfoModel()
//            
//            self.selectedArr.append(data)
//            self.collectionView.reloadData()
//        }
        navigationController?.pushViewController(channelVC, animated: true)
    }
    
    /// 我的
    func btnClicked(){
        let mineVC = MineViewController()
        mineVC.hidesBottomBarWhenPushed = true
        self.navigationController?.pushViewController(mineVC, animated: true)
    }
    
    /// 点击滚动栏图片
    ///
    /// - Parameter gesture:
    func didTap(gesture: UITapGestureRecognizer) {
        let url = URL(string: (imagesModel?.contentUrl[slideshow.currentPage])!)
        let web = WebViewController(url: url!, titleStr: (imagesModel?.titles[slideshow.currentPage])!)
        web.hidesBottomBarWhenPushed = true
        navigationController?.pushViewController(web, animated: true)
        //        let fullScreenController = slideshow.presentFullScreenController(from: self)
        
    }
}

extension WorkDeskViewController: UICollectionViewDelegate,UICollectionViewDataSource {
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 2
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        if section == 0 {
            return selectedArr.count
        } else {
            return appsModel.count
        }
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForFooterInSection section: Int) -> CGSize{
        return CGSize(width: view.frame.width, height: 5)
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: Identifier, for: indexPath) as! WorkDeskCell
        if indexPath.section == 0 {
            cell.label.text = selectedArr[indexPath.row].name
            cell.image.image = UIImage(named: selectedArr[indexPath.row].imageName!)
        } else {
            cell.label.text = appsModel[indexPath.row].yymc
        }
        
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if  indexPath.section == 0 {
            if indexPath.row == 0 {
//                let data2 = CSSLoginManager.shared().currentNTESLoginData
//                let account = data2?.account
//                let token2 = data2?.token
                var vc: UIViewController?
                vc = CSSLoginViewController.init(nibName: nil, bundle: nil)
                
                self.navigationController?.pushViewController(vc!, animated: true)
            } else if indexPath.row == 1 {
//                let data2 = NTESLoginManager.shared().currentLoginData
//                let account = data2?.account
//                let token2 = data2?.token
                var vc: UIViewController?
                
                vc = NTESLoginViewController.init(nibName: nil, bundle: nil)
                self.navigationController?.pushViewController(vc!, animated: true)
            } else if indexPath.row == 2 {
                let vc = CreatSessionViewController.init(nibName: nil, bundle: nil)
                self.navigationController?.pushViewController(vc, animated: true)
            } else {
                openURL(URLString: (selectedArr[indexPath.row] as AppInfoModel).url!)
            }
//            navigationController?.pushViewController(channelVC, animated: true)
        }else if (selectedArr[indexPath.row] as AppInfoModel).name! == "视频会议" {
            
            //视频会议
            let appKey2 = CSSDemoConfig.shared().appKey
            let cerName2 = CSSDemoConfig.shared().cerName
            NIMSDK.shared().register(withAppID: appKey2!, cerName: cerName2)
            NIMCustomObject.registerCustomDecoder(CSSCustomAttachmentDecoder())
            CSKit.shared().provider = CSSDataManager.sharedInstance()
            CSSLogManager.shared().start()
            
//            self.showloading()
//            NIMSDK.shared().loginManager.login(DataCenter.username!, token: DataCenter.password!.getMd5(), completion: { (error) in
//                
//                if error == nil {
//                    let sdkData = NTESLoginData()
//                    sdkData.account = DataCenter.username!
//                    sdkData.token = DataCenter.password!.getMd5()
//                    CSSLoginManager.shared().currentNTESLoginData = sdkData
//                    CSSServiceManager.shared().start()
            let vc = CSSLoginViewController()

            self.navigationController?.pushViewController(vc, animated: true)
            vc.hidesBottomBarWhenPushed = true;

//
//                }else{
//                    print(error)
//                }
//                self.hideloading()
//
//            })
            
//            self.navigationController?.pushViewController(CSSEnterRoomViewController(), animated: true)


        }else if (selectedArr[indexPath.row] as AppInfoModel).name! == "即时通信" {
            
            let vc = NTESSessionListViewController()            
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true)
            
        }else if (selectedArr[indexPath.row] as AppInfoModel).name! == "群发助手"{
            let vc = CreatSessionViewController.init(nibName: nil, bundle: nil)
            self.navigationController?.pushViewController(vc, animated: true)

        }
        
    }
    
    func openURL(URLString : String) {
        guard let url = URL(string: URLString) else {return}
        guard UIApplication.shared.canOpenURL(url) else {return}
        
        if #available(iOS 10.0, *) {
            UIApplication.shared.open(url, options: ["":""]) { (true) in}
        } else {
            UIApplication.shared.openURL(url)
        }
    }
}

extension WorkDeskViewController {
    
    func getImageData() {
        Network.post(parameter: ["sid": "D1068"], success: { (json) in
            let flag = json["result"]["flag"].stringValue
            if flag == "1" {
                let result = json["result"]["list"]
                self.imagesModel = WorkDeskImageModel(json: result)
                print(self.imagesModel?.images ?? "")
                self.addImages()
            }
        }) { (error) in
            print(error)
            ProgressHUD.toast(message: error)
        }
        
    }
    
    func addImages() {
        for item in (imagesModel?.images)! {
            sdWebImageSource.append(SDWebImageSource(urlString:item)!)
        }
        slideshow.setImageInputs(sdWebImageSource)
        self.titleLabel.text = self.imagesModel?.titles[slideshow.currentPage]
        slideshow.pageControl.backgroundColor = UIColor(white: 0, alpha: 0.5)
        titleLabel.backgroundColor = UIColor(white: 0, alpha: 0.5)
        
    }
    
    func getData() {
        let para: [String: Any]
        var s = ""
//        let rydm = DataCenter.ryxqModel?.rydm
        s += "<yyxxhqRequestFrom>"
        s += "<zhxx>\(25109231221)</zhxx>"
        s += "</yyxxhqRequestFrom>"
        
        para = paraMaker(data: ["tranId":"SCDS.HLWGZPT.MH.YYXXHQ", "s": s], sid: "D6666", extra: [:])
        Network.post(parameter: para, success: { (json) in
            let result = json["result"]["yyxxhqResponseForm"]["yyxxhqResponseGrid"]["yyxxhqResponselb"]
            if result.count > 0 {
               if result.array != nil {
                    self.appsModel = result.arrayValue.map(WorkDeskModel.init)
                } else {
                    self.appsModel = [JSONDeserializer<WorkDeskModel>.deserializeFrom(json:result.rawString())!]
                }
            }

            self.collectionView.reloadData()
        }) { (error) in
            print(error)
        }
    }

    
    
}

