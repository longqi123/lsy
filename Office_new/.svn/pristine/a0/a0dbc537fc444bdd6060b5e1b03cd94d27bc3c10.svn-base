//
//  ReviewController.swift
//  Office
//
//  Created by 梁仕友 on 2017/6/2.
//  Copyright © 2017年 roger. All rights reserved.
//

import UIKit
import CoreFramework

class ReviewController: UIViewController {
    var titleStr = ""
    var contentStr = ""
    var reviewStr = ""
    var segementResults = ""
    var switchON = false
    var showDataSource: [TxlModel1] = []
    let tableView = BaseTableView(frame: .zero, style: .grouped)
    let headerId = "SendNotificationHeaderID"
    let footBtn = UIButton()
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "审批"
        self.showDataSource = DataCenter.AdddataSource
        creatUI()
    }
}

extension ReviewController{
    func creatUI() {
        
        let item1 = UIBarButtonItem(title: "取消", style: UIBarButtonItemStyle.plain, target: self, action: #selector(leftBtnClicked))
        self.navigationItem.leftBarButtonItem = item1
        
        footBtn.setTitle("终审并发布", for: .normal)
        footBtn.setTitleColor(UIColor.white, for: .normal)
        footBtn.titleLabel?.font = .H2
        footBtn.setTitleColor(.T6, for: .normal)
        footBtn.backgroundColor = .B1
        view.addSubview(footBtn)
        footBtn.snp.makeConstraints { (make) in
            make.left.bottom.right.equalToSuperview()
            make.height.equalTo(49)
        }
        
        view.addSubview(tableView)
        tableView.delegate = self
        tableView.dataSource = self
        tableView.separatorStyle = .singleLine
        tableView.tableFooterView = UIView()
        tableView.snp.makeConstraints { (make) in
            make.top.left.right.equalToSuperview()
            make.bottom.equalTo(footBtn.snp.top)
        }
        tableView.register(NotificationPersonCell.self, forCellReuseIdentifier: "NotificationPersonCellID")
    }
}

extension ReviewController: UITableViewDelegate,UITableViewDataSource{
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 3
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if section == 0 {
            return 1
        }else if section == 1{
            return 1
        }else{
            return 3
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if indexPath.section == 0 {
            return 160
        }else if indexPath.section == 1{
            if indexPath.row == 0 {
                return 45
            }
        }else if indexPath.section == 2{
            if indexPath.row == 0 || indexPath.row == 1  {
                return 45
            }else {
                return 80
            }
        }
        return 45
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.section == 0 {
            let cell = Bundle.main.loadNibNamed("NewNotificationCell1", owner: self, options: nil)?.last as! NewNotificationCell1
            cell.CintentBlock = {[weak self] content,title in
                self?.titleStr = title
                self?.contentStr = content
            }
            cell.selectionStyle = .none
            return cell
            
        }else if indexPath.section == 1{
            if indexPath.row == 0 {
                let cell = Bundle.main.loadNibNamed("NotificationDetailCell2", owner: self, options: nil)?.last as! NotificationDetailCell2
                cell.title.text = "通知人员"
                cell.content.text = "50人"
                cell.separatorInset = UIEdgeInsetsMake(0, 0, 0, 0)
                cell.accessoryType = .disclosureIndicator
                return cell
            }            
        }else if indexPath.section == 2{
            if indexPath.row == 0 {
                let cell  = Bundle.main.loadNibNamed("ReviewResultsCell", owner: self, options: nil)?.last as! ReviewResultsCell
                cell.title.text = "审批结果"
                cell.segementBlock = {[weak self] result in
                    self?.segementResults = result
                }
                cell.separatorInset = UIEdgeInsetsMake(0, 0, 0, 0)
                return cell
            }else if indexPath.row == 1{
                let cell = Bundle.main.loadNibNamed("OrganizationCell", owner: self, options: nil)?.last as! OrganizationCell
                cell.title.text = "审批意见"
                return cell
            }else if indexPath.row == 2{
                let celll = Bundle.main.loadNibNamed("AuditOpinionCell", owner: self, options: nil)?.last as! AuditOpinionCell
                celll.reviewBlock = {[weak self] content in
                    self?.reviewStr = content
                }
                celll.selectionStyle = .none
                return celll
            }
        }
        return UITableViewCell()
    }
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 10
    }
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 0.001
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if indexPath.section == 1 {
            if indexPath.row == 0 {
                let vc = HaveAcceptController()
                self.navigationController?.pushViewController(vc, animated: true)
            }
        }
    }
}
extension ReviewController{
    func leftBtnClicked(){//取消
        let alertController = UIAlertController(title: "", message: "是否保存为草稿?",preferredStyle: .actionSheet)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let deleteAction =  UIAlertAction(title: "保存", style: .destructive) { (baocun) in
            
            
        }
        let archiveAction =  UIAlertAction(title: "不保存", style: .default) { (baocun) in
            
            self.navigationController?.popViewController(animated: true)
        }
        let messageFont = UIFont.H6
        let messageAttribute = NSMutableAttributedString.init(string: "是否保存为草稿?")
        messageAttribute.addAttributes([NSFontAttributeName:messageFont,
                                        NSForegroundColorAttributeName:UIColor.T1],
                                       range:NSMakeRange(0, 8))
        alertController.setValue(messageAttribute, forKey: "attributedMessage")
        cancelAction.setValue(UIColor.T1, forKey:"titleTextColor")
        deleteAction.setValue(UIColor.T1, forKey:"titleTextColor")
        archiveAction.setValue(UIColor.T8, forKey:"titleTextColor")
        alertController.addAction(cancelAction)
        alertController.addAction(deleteAction)
        alertController.addAction(archiveAction)
        self.present(alertController, animated: true, completion: nil)
        
    }

}
