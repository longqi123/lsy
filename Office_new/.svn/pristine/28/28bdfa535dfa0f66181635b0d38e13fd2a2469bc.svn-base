//
//  AppIntroductionCell.swift
//  Office
//
//  Created by GA GA on 22/05/2017.
//  Copyright © 2017 roger. All rights reserved.
//

import UIKit
import CoreFramework

class AppIntroductionCell: UITableViewCell {

    var icon: UIImageView = {
        let myIcon = UIImageView()
        myIcon.contentMode = .scaleAspectFill
        myIcon.image = #imageLiteral(resourceName: "ying_yong_jie_shao")
        return myIcon
    }()
    
    var titleLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.H3
        label.textColor = UIColor.T2
        label.text = "应用介绍"
        return label
    }()
    
    var introductionLabel: UILabel = {
        let label = UILabel()
        label.numberOfLines = 0
        label.font = UIFont.H5
        label.textColor = UIColor.T3
        label.text = "应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍应用介绍"
        return label
    }()
    
    var imagesScrollView = UIScrollView()
    
    var images: [String] {
        let imageData = ["image1.png", "image2.png", "image3.png"]

        return imageData
    }
    
    var contentImage = [UIImageView]()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.selectionStyle = .none
        contentView.addSubview(icon)
        icon.snp.makeConstraints { (make) in
            make.left.equalTo(contentView).inset(12)
            make.top.equalTo(contentView).inset(15)
        }
        
        contentView.addSubview(titleLabel)
        titleLabel.snp.makeConstraints { (make) in
            make.left.equalTo(icon.snp.right).offset(10)
            make.top.equalTo(icon)
        }
        
        contentView.addSubview(introductionLabel)
        introductionLabel.snp.makeConstraints { (make) in
            make.left.equalTo(titleLabel)
            make.top.equalTo(titleLabel.snp.bottom).offset(15)
            make.right.equalTo(contentView).inset(10)
        }
        
        contentView.addSubview(imagesScrollView)
        imagesScrollView.backgroundColor = .red
        imagesScrollView.alwaysBounceHorizontal = true
        imagesScrollView.snp.makeConstraints { (make) in
            make.top.equalTo(introductionLabel.snp.bottom).offset(15)
            make.left.equalTo(contentView).inset(12)
            make.right.equalTo(contentView).inset(12)
            make.height.equalTo(141)
        }
        
        contentView.addLine { (make) in
            make.top.equalTo(contentView)
            make.width.equalTo(contentView)
            make.height.equalTo(1)
            make.left.equalTo(contentView)
        }
        
        contentView.addLine { (make) in
            make.bottom.equalTo(contentView)
            make.top.equalTo(imagesScrollView.snp.bottom).offset(15)
            make.width.equalTo(contentView)
            make.height.equalTo(0.5)
            make.left.equalTo(contentView).inset(12)
        }

        for (i, row) in images.enumerated() {
            let myImage = UIImageView()
            myImage.image = UIImage(named: row)
            myImage.backgroundColor = UIColor.cyan
            imagesScrollView.addSubview(myImage)
            contentImage.append(myImage)
        
            if i == 0 {
                myImage.snp.makeConstraints({ (make) in
                    make.left.equalTo(imagesScrollView)
                    make.top.equalTo(imagesScrollView)
                    make.width.equalTo(79)
                    make.height.equalTo(imagesScrollView)

                })
            } else if i == images.count - 1 {
                myImage.snp.makeConstraints({ (make) in
                    make.top.equalTo(imagesScrollView)
                    make.left.equalTo(contentImage[i - 1].snp.right).offset(11)
                    make.width.equalTo(79)
                    make.right.equalTo(imagesScrollView)
                    make.height.equalTo(imagesScrollView)

                })
            } else {
                myImage.snp.makeConstraints({ (make) in
                    make.top.equalTo(imagesScrollView)
                    make.left.equalTo(contentImage[i - 1].snp.right).offset(11)
                    make.width.equalTo(79)
                    make.height.equalTo(imagesScrollView)
                })
            }
            
        }

    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

class AppInformationCell: UITableViewCell {
    
    var icon: UIImageView = {
        let myIcon = UIImageView()
        return myIcon
    }()
    
    var titleLabel: UILabel = {
        let label = UILabel()
        label.text = "应用介绍"
        return label
    }()
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.selectionStyle = .none
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
